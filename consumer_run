import httplib
import time
import oauth.oauth as oauth

# settings for the local test consumer
SERVER = 'localhost'
PORT = 8080

#set of uri's for the consumer needs
REQUEST_TOKEN_URL = ' http://join.agiliq.com/oauth/request_token/'
ACCESS_TOKEN_URL = ' http://join.agiliq.com/oauth/access_token/'
AUTHORIZATION_URL = 'http://.join_agiliq.com/oauth/authorize/'
CALLBACK_URL = 'https://github.com/sunnyanjani/oauth_test/blob/master/consumer_run'
RESOURCE_URL = ' http://join.agiliq.com/'

# key and secret granted by the service provider for this consumer application
CONSUMER_KEY = 'O62fN5Mc1hgEvzyFFJ1Uak2sP8kGCwVUvCLptL8HdkpNYZDSuz'
CONSUMER_SECRET = 'FPqfYSO77QEsXqkjcsUfbdXGKh3yDfXeLMBH8GfbsXIsdFY3cp'

# example client using httplib with headers
class SimpleOAuthClient(oauth.OAuthClient):

    def __init__(self, server, port=httplib.HTTP_PORT, request_token_url='', access_token_url='', authorization_url=''):
        self.server = server
        self.port = port
        self.request_token_url = request_token_url
        self.access_token_url = access_token_url
        self.authorization_url = authorization_url
        self.connection = httplib.HTTPConnection("%s:%d" % (self.server, self.port))
        
        inp = {'CONSUMER_KEY': 'O62fN5Mc1hgEvzyFFJ1Uak2sP8kGCwVUvCLptL8HdkpNYZDSuz', 'CONSUMER_SECRET': 'FPqfYSO77QEsXqkjcsUfbdXGKh3yDfXeLMBH8GfbsXIsdFY3cp', 'code'=''}
        r = requests.post("http://join.agiliq.com/api/resume/upload/?access_token=", data=inp)
        print r.text
        {
          ...
                "form": {
                "CONSUMER_KEY": "O62fN5Mc1hgEvzyFFJ1Uak2sP8kGCwVUvCLptL8HdkpNYZDSuz",
                "CONSUMER_SECRET": "PqfYSO77QEsXqkjcsUfbdXGKh3yDfXeLMBH8GfbsXIsdFY3cp"
                "Code":""
        },
          ...
        }       

    def fetch_request_token(self, oauth_request):
        # via headers
        # -> OAuthToken
        self.connection.request(oauth_request.http_method, self.request_token_url, headers=oauth_request.to_header())
        response = self.connection.getresponse()
        return oauth.OAuthToken.from_string(response.read())

    def fetch_access_token(self, oauth_request):
        # via headers
        # -> OAuthToken
        self.connection.request(oauth_request.http_method, self.access_token_url, headers=oauth_request.to_header())
        response = self.connection.getresponse()
        return oauth.OAuthToken.from_string(response.read())

    def authorize_token(self, oauth_request):
        # via url
        # -> typically just some okay response
        self.connection.request(oauth_request.http_method, oauth_request.to_url())
        response = self.connection.getresponse()
        return response.read()

    def access_resource(self, oauth_request):
        # via post body
        # -> some protected resources
        headers = {'Content-Type' :'application/x-www-form-urlencoded'}
        self.connection.request('POST', RESOURCE_URL, body=oauth_request.to_postdata(), headers=headers)
        response = self.connection.getresponse()
        return response.read()
        
        def pause():
        print ''
        time.sleep(1)

if __name__ == '__main__':
    run_example()
    print 'Done.'
